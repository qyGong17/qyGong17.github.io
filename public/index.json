[{"content":"《草原》是契诃夫的一部不长的小说，最近突然想起，于是在周六的上午和晚上，大概花了半天时间，又读了一遍。很喜欢契诃夫笔下的俄罗斯草原。\n我诚心诚意地建议诸位尽可能经常地拿出契诃夫的书来读读（即使经过翻译走了样也不要紧），并按照作者的意图陷入遐想。-纳博科夫\n《草原》也同样是这样一部值得陷入遐想的作品。草原上，炎热午后独自游荡、午夜的篝火和路旁的十字架、暴风雨、农民苦闷的生活\u0026hellip;这也是我花了这么久才读完的原因之一。慢慢读着这些文字，脑海中浮现出一系列画面\u0026hellip;\n每逢不移开自己的眼睛，久久地凝望着深邃的天空，那么不知什么缘故，思想和感情就会汇合成为一种孤独的感觉。人们开始感到一种无可补救的孤独，凡是平素感到接近和亲切的东西都变得无限疏远，没有价值了。那些千万年来一直在天空俯视大地的星星，那本身使人无法理解、同时又对人的短促生涯漠不关心的天空和暗影，当人跟它们面对面、极力想了解它们的意义的时候，却用它们的沉默压迫人的灵魂，那种在坟墓里等着我们每个人的孤独，就来到人的心头，生活的实质就显得使人绝望，显得可怕了……\n另外，自己现在也在一个奇妙的位置上，不知道后面几个月、明年会发生什么、过一种怎么样的生活。虽然早已不是九岁的男孩，但是还说不上所谓“稳定”，对未来还是有一种恐惧和好奇。\n这生活会是什么样子呢？\n下面是流水账： 其实没太多情节，主要是以九岁小男孩叶戈鲁什卡的视角叙述的一次出行，他坐着舅舅和神甫去卖羊毛的便车，要去外地上学。时间是七月夏季。\n在草原上的旅途持续了好几天，中间有一些挺有意思的小故事（然而在我过于简单的描述下就变得无聊了。。）：\n在小溪边，大家午睡，叶戈鲁什卡闲逛，遇到另一个小男孩基特 路上破旧的旅店，遇到庸俗的老板，和美丽的德兰尼茨卡雅伯爵小姐 舅舅和神甫赶路，让叶戈鲁什卡跟着赶车的几个农民慢慢走。 可是未必人人都有本领看见那些不是在奔逃躲藏，也不是在仓皇四顾，而是在过着家庭生活的野生动物。瓦夏却看得见玩耍的狐狸、用小爪子洗脸的野兔、啄翅膀上羽毛的大鸨、钻出蛋壳的小鸨。由于眼睛尖，瓦夏除了大家所看见的这个世界以外，还有一个自己独有而别人没份的世界。那世界多半很美，因为每逢他看见什么，看得入迷的时候，谁也不能不嫉妒他。\n“我们这种生活没有什么指望，苦透了！”\n草原上更多的故事：在坟墓十字架附近喝粥，听潘捷列讲强盗的故事。遇到陶醉在爱情中的幸福人，康斯坦丁。 看到这个幸福的人，大家都觉得烦闷，也渴望幸福。人人都心事重重。德莫夫站起来，轻轻地在篝火旁走着。从他的脚步，从他肩胛骨的动作，看得出他难受，烦闷。他站住，瞧着康斯坦丁，坐下来。\n神秘的、大家都在找的瓦尔拉莫夫 赶路过程中的暴雨 最后与舅舅、神甫汇合，却因为淋雨而生病发热 最后，叶戈鲁什卡被带到母亲旧时朋友家里寄宿，准备去上中学。 等他跑出街门，伊万·伊万内奇摇着弯柄的手杖，赫利斯托福尔神甫摇着长木杖，刚刚转过弯去。叶戈鲁什卡这才感到：这以前他所熟悉的一切东西随着这两个人一齐像烟似地永远消失了。他周身发软，往小凳上一坐，用悲伤的泪珠迎接这种对他来说现在还刚刚开始的、不熟习的新生活…… 这生活会是什么样子呢？\n","permalink":"qygong17.github.io/posts/%E8%8D%89%E5%8E%9F-%E5%A5%91%E8%AF%83%E5%A4%AB/","summary":"Spoiler alert.","title":"草原 契诃夫"},{"content":"使用OrCAD 16.6。（17.2简单测试好像也有这个问题，不知道更新的版本是否不同）\n结论 平坦原理图中，个人推荐使用off-page connector.\n使用Port的问题 主要是DRC的问题。port名称不匹配造成单端网络时，在平坦原理图中DRC不会报错。\n比如，下图两页中的data1信号，一个接了data1 port，另一个接了 data3 port，但是DRC不会报错。感觉这容易导致设计错误。\n删除port的情况 删除port，如果两个net alias名称相同，DRC会有警告。\nChecking For Single Node Nets\rWARNING(ORCAP-1600): Net has fewer than two connections data1 SCHEMATIC1, PAGE1 (3.50, 1.60) WARNING(ORCAP-1600): Net has fewer than two connections data1 SCHEMATIC1, PAGE2 (3.80, 2.40) Checking For Unconnected Bus Nets\rWARNING(ORCAP-1611): Two nets in same schematic have the same name, but there is no off-page connector data1 SCHEMATIC1, PAGE2 (3.80, 2.40) 使用off-page的情况 使用off-page connector，但是名称不匹配时，DRC也会有警告。\nChecking For Single Node Nets\rWARNING(ORCAP-1600): Net has fewer than two connections data1 SCHEMATIC1, PAGE1 (3.50, 1.60) WARNING(ORCAP-1600): Net has fewer than two connections data3 SCHEMATIC1, PAGE2 (3.80, 2.40) Checking For Unconnected Bus Nets\rChecking Off-Page Connections\rWARNING(ORCAP-1613): No matching off-page connector data1 SCHEMATIC1, PAGE1 (3.90, 1.60) WARNING(ORCAP-1613): No matching off-page connector data3 SCHEMATIC1, PAGE2 (4.20, 2.40) 总结 加了port以后，DRC中\n悬空网络的警告被抑制 port不会像off-page connector一样检查名称匹配 总之就是port名称不匹配的错误就很难被发现。（似乎没找到相关的DRC设置）\n","permalink":"qygong17.github.io/posts/cadence-orcad-%E5%B9%B3%E5%9D%A6%E5%8E%9F%E7%90%86%E5%9B%BE%E4%BD%BF%E7%94%A8port%E8%BF%98%E6%98%AFoff-page/","summary":"使用OrCAD 16.6。（17.2简单测试好像也有这个问题，不知道更新的版本是否不同）\n结论 平坦原理图中，个人推荐使用off-page connector.\n使用Port的问题 主要是DRC的问题。port名称不匹配造成单端网络时，在平坦原理图中DRC不会报错。\n比如，下图两页中的data1信号，一个接了data1 port，另一个接了 data3 port，但是DRC不会报错。感觉这容易导致设计错误。\n删除port的情况 删除port，如果两个net alias名称相同，DRC会有警告。\nChecking For Single Node Nets\rWARNING(ORCAP-1600): Net has fewer than two connections data1 SCHEMATIC1, PAGE1 (3.50, 1.60) WARNING(ORCAP-1600): Net has fewer than two connections data1 SCHEMATIC1, PAGE2 (3.80, 2.40) Checking For Unconnected Bus Nets\rWARNING(ORCAP-1611): Two nets in same schematic have the same name, but there is no off-page connector data1 SCHEMATIC1, PAGE2 (3.80, 2.40) 使用off-page的情况 使用off-page connector，但是名称不匹配时，DRC也会有警告。","title":"Cadence OrCAD 平坦原理图使用port还是off-page？"},{"content":"Using Ansys SIwave 2020R2.\nThis post introduces a basic IR-drop analysis on the power planes using SIwave 2020R2.\nAnalyze the voltage drop of one power rail, from source to chip. All the RLC components are deactivated except for those connected in series to the power rails. SIwave Documentation: Computing DC IR Simulations\nNew Project Import ODB++ default setting for nets. The Workflow Wizard Open the Workflow Wizard from this button on the upper-left.\nStackup Delete the smt layers above top and below bottom (they have 0 thickness and would cause simulation error).\n(For IR-analysis, the dielectric material is not important, so use default.)\nPadstack Mainly, the via plating setting. Default:\nChange it to 1mil (or something else, according to the manufacturer). Verify Circuit Element Parameters Deactivate all the RLC elements.\nPower/Ground Net and Sanitize Layout Default. Here are the documentations. Identifying Power and Ground Nets\nSanitize Layout is an operation for cleaning power and ground nets in order to fix certain alignment problems as well as complexities that may slow down simulation. It works by uniting the planes and traces for each net to be cleaned. Once the united planes are formed, portions that display trace-like properties are converted into traces.\nConnect the two planes The VCCINT plane is smulated. The resistor in series is for current sensing, connecting the two planes, VCCINT and VCCINT_FPGA.\nAdd an ideal resistor to connect VCCINT and VCCINT_FPGA in the simulation.\nConfigure DC-IR Drop VCCINT and VCCINT_FPGA are both selected. U21 is the power supply, set it as voltage source. U1 is the FPGA chip, set it as current source (also Distributed Current so that each power supply pin is simulated as a small load). Follow Configure--Validate--Simulate to start IR simulation.\nAbout Node to Ground From documentation: mainly, select Negative for voltage source and Neither for everything else.\nUse the Node to Ground drop-down menu to select Neither, Negative, or Positive.\nIf you select Negative on a voltage source, the voltage display on its ground pin will be 0 V. If you select Positive on a voltage source, the voltage display on its ground pin will be negative. Consider this as being the 0 node in a SPICE simulation. This is the node to which you want all voltages referenced. Since SIwave includes the return paths of all planes (including the ground), we cannot assume that all of the sources reference that 0 node. Thus we have to pick one to be the absolute 0 node reference. So if we put the 0 node on the positive side of a voltage plane, the \u0026ldquo;ground\u0026rdquo; or return path would show as negative. Displaying Results Plot Current/Voltages\nThis example displays voltage level.\nSelect certain layers for display Display other stuff such as current density (J) or power (P). View-turn off Display Mesh, for a cleaner look. Display only layers 1,3,4,9,15,16: The results:\nThe red one is VCCINT, the source, at almost 1V Between VCCINT and VCCINT_FPGA (the green one), is the voltage drop on the current sensing resistor (0.005R*20A=0.1V) The total voltage drop from source to load is around 0.3 V. But in reality, the voltage feedback trace will compensate for the voltage drop, so that the load voltage is 1V (and the source voltage is about 1.3V). ","permalink":"qygong17.github.io/posts/siwave/siwave1-new-project-and-dc-ir-analysis/","summary":"Using Ansys SIwave 2020R2.\nThis post introduces a basic IR-drop analysis on the power planes using SIwave 2020R2.\nAnalyze the voltage drop of one power rail, from source to chip. All the RLC components are deactivated except for those connected in series to the power rails. SIwave Documentation: Computing DC IR Simulations\nNew Project Import ODB++ default setting for nets. The Workflow Wizard Open the Workflow Wizard from this button on the upper-left.","title":"SIwave1 New Project and DC IR analysis"},{"content":"Using Vivado 2018.3 .\nI2C EEPROM operation I have xx24C64 on my board:\n8 KB (64 Kb) space Address range 0~0x1FFF Device address 7’b101_0011, 0x53 (on my board, A2=0, A1=A0=1) Datasheet: CAT24C64 - 64 Kb I2C CMOS Serial EEPROM (onsemi.com)\nByte Write Selective Read Vivado Block Design Except for the AXI_IIC IP, other settings are the same as the block design in Microblaze2.1 JTAG-UART | QY\u0026rsquo;s Notes.\nI2C Polled-mode From xiic documentation, iic: Main Page:\nThis driver does not provide a polled mode of operation primarily because polled mode which is non-blocking is difficult with the amount of interaction with the hardware that is necessary.\nSo, at first, I thought interrupt was necessary\u0026hellip; Until I find this example: xiic_low_level_eeprom_example.c\nSince I only wanted to configure an I2C slave device, polled-mode with blocking is fine. Basically, I just need XIic_Recv() and XIic_Send().\nAnd the job was done. I guess I won\u0026rsquo;t be using microblaze in a while\u0026hellip;\nResource 24C64 Datasheet: CAT24C64 - 64 Kb I2C CMOS Serial EEPROM (onsemi.com) Xilinx Github : iic: xiic_l.c File Reference AXI_IIC读写操作_axi iic_丁点的沙砾的博客-CSDN博客 IIC Protocol and Programming Sequence (xilinx.com) Xilinx FPGA Microblaze AXI_IIC使用方法及心得_axi iic_NjustMEMS_ZJ的博客-CSDN博客 Sample Code Run result: write 0x67, read 0x67, pass. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 #include \u0026lt;stdio.h\u0026gt; #include \u0026#34;platform.h\u0026#34; #include \u0026#34;xil_printf.h\u0026#34; #include \u0026#34;xiic_l.h\u0026#34; #include \u0026#34;sleep.h\u0026#34; #define IIC_BASE_ADDRESS\tXPAR_IIC_0_BASEADDR #define EEPROM_ADDRESS 0x53 int eepromWriteByte(u32 IicBaseAddress, u8 deviceAddress, int romAddr, u8 dataByte); u8 eepromReadByte(u32 IicBaseAddress, u8 deviceAddress, int romAddr); int main() { u8 byteSend; u8 byteRecv; int eepromAddr; init_platform(); eepromAddr = 0x0123; byteSend = 0x67; eepromWriteByte(IIC_BASE_ADDRESS, EEPROM_ADDRESS, eepromAddr, byteSend); usleep(6000); // delay \u0026gt;5ms // wait for eeprom internal write cycle byteRecv = eepromReadByte(IIC_BASE_ADDRESS, EEPROM_ADDRESS, eepromAddr); xil_printf(\u0026#34;Received: 0x%X\\n\\r\u0026#34;, byteRecv); if( byteRecv == byteSend) xil_printf(\u0026#34;EEPROM byte wirte and read OK.\\n\\r\u0026#34;); cleanup_platform(); return 0; } int eepromWriteByte(u32 IicBaseAddress, u8 deviceAddress, int romAddr, u8 dataByte) { int bitCount; u8 writeBuffer[3]; writeBuffer[0] = (u8)(romAddr \u0026gt;\u0026gt; 8); //higher 8 bits writeBuffer[1] = (u8)(romAddr \u0026amp; 0x00FF); //lower 8 bits writeBuffer[2] = dataByte; bitCount = XIic_Send(IicBaseAddress, deviceAddress, writeBuffer, 3, XIIC_STOP); return bitCount; } u8 eepromReadByte(u32 IicBaseAddress, u8 deviceAddress, int romAddr) { u8 recvData; int bitCount; u8 writeBuffer[2]; writeBuffer[0] = (u8)(romAddr \u0026gt;\u0026gt; 8); //higher 8 bits writeBuffer[1] = (u8)(romAddr \u0026amp; 0x00FF); //lower 8 bits bitCount = XIic_Send(IicBaseAddress, deviceAddress, writeBuffer, 3, XIIC_REPEATED_START); bitCount = XIic_Recv(IicBaseAddress, deviceAddress, \u0026amp;recvData, 1, XIIC_STOP); return recvData; } ","permalink":"qygong17.github.io/posts/microblaze3-i2c-eeprom-polled/","summary":"AXI_IIC IP and EEPROM operation.","title":"Microblaze3 I2C EEPROM Polled"},{"content":"Hardware Platform Same hardware platform as in Microblaze2.1 JTAG-UART | QY\u0026rsquo;s Notes\nThe key_gpio binds to a button on the board.\nConfigurations The codes are modified from the interrupt example: xgpio_intr_tapp_example.c. (I found these examples a bit too complicated for a beginner like me.)\nBasically:\nInitialize the GPIO device Initialize the interrupt device Bind the GPIO interrupt handler function Enable interrupt (both in the GPIO device and the interrupt device) Wait for the interrupt Debug Every time the key is pressed, the LEDs are toggled, and a message is printed through JTAG UART .\nSample Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 #include \u0026lt;stdio.h\u0026gt; #include \u0026#34;platform.h\u0026#34; #include \u0026#34;xil_printf.h\u0026#34; #include \u0026#34;xgpio.h\u0026#34; #include \u0026#34;xintc.h\u0026#34; #include \u0026#34;xil_exception.h\u0026#34; // use two GPIO modules, both with only channel 1 #define GPIO_CHANNEL1 1 #define DIR_OUTPUT 0 #define DIR_INPUT 0x0001 #define INTC_DELAY 2000000 // the width of key_gpio is 1, // so only the first bit is used. #define KEY_GPIO_BIT 0x0001 void gpio_handler(void *CallBackRef); void init_gpio(); void init_gpio_intr(); int Led_on; int IntrCnt; XGpio led_gpio; XGpio key_gpio; XIntc intc; int main() { init_platform(); init_gpio(); // initialize key and led gpio init_gpio_intr(); // initialize interrupt Led_on = 0; IntrCnt = 0; print(\u0026#34;Receiving key interrupts.\\n\\r\u0026#34;); while(1){ } //cleanup_platform(); return 0; } void init_gpio() { int status; // XPAR_GPIO_LED_DEVICE_ID: see xparameters.h // initialize led_gpio as all output status = XGpio_Initialize(\u0026amp;led_gpio, XPAR_GPIO_LED_DEVICE_ID); if(status != XST_SUCCESS) //if status!=0 { printf(\u0026#34;Gpio LED Initialization Failed\\r\\n\u0026#34;); return XST_FAILURE; //return 1 } XGpio_SetDataDirection(\u0026amp;led_gpio, GPIO_CHANNEL1, DIR_OUTPUT); //all bits as output //initialize key_gpio as input status = XGpio_Initialize(\u0026amp;key_gpio, XPAR_GPIO_KEY_DEVICE_ID); if(status != XST_SUCCESS) //if status!=0 { printf(\u0026#34;Gpio KEY Initialization Failed\\r\\n\u0026#34;); return XST_FAILURE; //return 1 } XGpio_SetDataDirection(\u0026amp;key_gpio, GPIO_CHANNEL1, DIR_INPUT); //set the last bit as input } void init_gpio_intr() { int status; //initialize the interrupt controller, intc status = XIntc_Initialize(\u0026amp;intc, XPAR_MICROBLAZE_0_AXI_INTC_DEVICE_ID); if(status != XST_SUCCESS) //if status!=0 { printf(\u0026#34;INTC Initialization Failed\\r\\n\u0026#34;); return XST_FAILURE; //return 1 } /* Hook up interrupt service routine */ XIntc_Connect(\u0026amp;intc, XPAR_INTC_0_GPIO_0_VEC_ID, (Xil_ExceptionHandler)gpio_handler, \u0026amp;key_gpio); /* Enable the interrupt vector at the interrupt controller */ XIntc_Enable(\u0026amp;intc, XPAR_INTC_0_GPIO_0_VEC_ID); /* * Start the interrupt controller such that interrupts are recognized * and handled by the processor */ status = XIntc_Start(\u0026amp;intc, XIN_REAL_MODE); if (status != XST_SUCCESS) { printf(\u0026#34;INTC start Failed\\r\\n\u0026#34;); return XST_FAILURE; //return 1 } //enable GPIO interrupt for the first bit in key_gpio XGpio_InterruptEnable(\u0026amp;key_gpio, KEY_GPIO_BIT); XGpio_InterruptGlobalEnable(\u0026amp;key_gpio); /* * Initialize the exception table and register the interrupt * controller handler with the exception table */ Xil_ExceptionInit(); Xil_ExceptionRegisterHandler(XIL_EXCEPTION_ID_INT, (Xil_ExceptionHandler)XIntc_InterruptHandler, \u0026amp;intc); /* Enable non-critical exceptions */ Xil_ExceptionEnable(); } void gpio_handler(void *CallBackRef) { XGpio *GpioPtr = (XGpio *)CallBackRef; int delay; IntrCnt ++; // disable the gpio interrupt for a while // a very simple key debounce XGpio_InterruptDisable(\u0026amp;key_gpio, KEY_GPIO_BIT); for(delay=0;delay \u0026lt; INTC_DELAY; delay++); //introduce some delay XGpio_InterruptEnable(\u0026amp;key_gpio, KEY_GPIO_BIT); // toggle the LEDs every time gpio interrupt is triggered if(Led_on) { Led_on = 0; //GPIO output 0 XGpio_DiscreteWrite(\u0026amp;led_gpio, GPIO_CHANNEL1, 0x00); } else { Led_on = 1; //GPIO output 1 XGpio_DiscreteWrite(\u0026amp;led_gpio, GPIO_CHANNEL1, 0x0F); } //should use xil_printf() instead of print() xil_printf(\u0026#34;Key pressed count: %d.\\n\\r\u0026#34;, IntrCnt); /* Clear the Interrupt */ XGpio_InterruptClear(GpioPtr, KEY_GPIO_BIT); } ","permalink":"qygong17.github.io/posts/microblaze2.2-gpio-interrupt/","summary":"Hardware Platform Same hardware platform as in Microblaze2.1 JTAG-UART | QY\u0026rsquo;s Notes\nThe key_gpio binds to a button on the board.\nConfigurations The codes are modified from the interrupt example: xgpio_intr_tapp_example.c. (I found these examples a bit too complicated for a beginner like me.)\nBasically:\nInitialize the GPIO device Initialize the interrupt device Bind the GPIO interrupt handler function Enable interrupt (both in the GPIO device and the interrupt device) Wait for the interrupt Debug Every time the key is pressed, the LEDs are toggled, and a message is printed through JTAG UART .","title":"Microblaze2.2 GPIO Interrupt"},{"content":"Using Vivado 2018.3 .\nBlock Diagram Changes to Microblaze1 Hello World LED | QY\u0026rsquo;s Notes:\nAn AXI Interrrupt Controller Another AXI_GPIO IP, gpio_key enable GPIO interrupt the interrupt output is connected to AXI Interrrupt Controller MDM module, enable JTAG UART Microblaze Enable interrupt controller Increase Local Memory to 128 KB Key GPIO Enable interrupt\nSDK BSP Settings Settings to direct print()/xil_printf() output to JTAG UART (nomarlly, these are the default, since only one UART is present here).\nSample Code Just a helloworld\u0026hellip;\n1 2 3 4 5 6 7 8 9 10 11 12 13 #include \u0026lt;stdio.h\u0026gt; #include \u0026#34;platform.h\u0026#34; #include \u0026#34;xil_printf.h\u0026#34; int main() { init_platform(); print(\u0026#34;Hello World\\n\\r\u0026#34;); cleanup_platform(); return 0; } Debug The output is printed in the Console.\nJTAG UART could be useful for debugging. However, sending stuff to it seems compicated. For example, in this link: MicroBlaze bare metal JTAG UART how do I receive/input/stdin? (xilinx.com)\nI am trying to number these posts based on the hardware platform, i.e., the block diagram in Vivado. So the y-th application from the x-th block diagram would be x.y.\nMy end goal here is just to control an iic device with MicroBlaze, but I will firstly work on modules such as interrupt, timer and uart, because I find the AXI_IIC IP and the APIs a bit confusing and seem to require some other IPs such as the interrupt.\nug940-vivado-tutorial-embedded-design.pdf\nMicroBlaze Processor Quick Start Guide (xilinx.com)\n","permalink":"qygong17.github.io/posts/microblaze2.1-jtag-uart/","summary":"Using Vivado 2018.3 .\nBlock Diagram Changes to Microblaze1 Hello World LED | QY\u0026rsquo;s Notes:\nAn AXI Interrrupt Controller Another AXI_GPIO IP, gpio_key enable GPIO interrupt the interrupt output is connected to AXI Interrrupt Controller MDM module, enable JTAG UART Microblaze Enable interrupt controller Increase Local Memory to 128 KB Key GPIO Enable interrupt\nSDK BSP Settings Settings to direct print()/xil_printf() output to JTAG UART (nomarlly, these are the default, since only one UART is present here).","title":"Microblaze2.1 JTAG-UART"},{"content":"Recently, I learned some basic simulations with SIwave, mainly:\nDC-IR analysis S-paramater extraction I will first record the steps to perform these simulations for future reference. Then, maybe, test some of the signal integrity stuff on a simple board (via, capacitor, impedance control and so on).\nI am using:\nAllegro 16.6 Ansys SIwave 2020R2 To import to SIwave: .brd file\u0026ndash;\u0026gt;ODB++ file\u0026ndash;\u0026gt;SIwave project.\nThis post covers: .brd file\u0026ndash;\u0026gt;ODB++ file\nInstall ODB++ Inside. I have version 11.4 on my computer, which works for Allegro 16.6. But I can\u0026rsquo;t find any older version on the official site for Allegro 16.6. So no download link will be provided here. ODB++_Inside_Cadence_Allegro_114_Windows_64_SA_Setup Official site (requires login and only support Allegro 17.x): ODB++ Inside for Cadence Allegro (Windows 64 bit) - ODB++Design (odbplusplus.com) Reboot PC to update environment variables. Put the .brd PCB file in a path containing no Chinese characters (I don\u0026rsquo;t know about other languages) Open PCB file. In Allegro 16.6, File-Export-ODB++ Inside Prompts: Do you want to extract net impedance average? Yes, (Though I didn\u0026rsquo;t see the difference) After a while, ODB++ GUI pops up (images below): Input path, default, points to the .brd PCB file Output path, default, the path of the .brd file model name: enter a file name, such as odb0523 Open ODB++ Viewer: No Create Archive: .tgz, the output would be a single compressed file, which is nicer than a folder of files. Click Next, and the odb0523.tgz would be in the selected directory as in step 6.2, ready to be imported to SIwave. ","permalink":"qygong17.github.io/posts/siwave/siwave0-allegro-16.6-export-odb++/","summary":"Export an Allegro 16.6 PCB file to ODB++, to be imported in SIwave.","title":"SIwave0 Allegro 16.6 Export ODB++"},{"content":"Notes on: The Collector’s Fallacy • Zettelkasten Method\nCollector\u0026rsquo;s Fallacy Hoarding information, such as making copies and bookmarking webpages, can be addictive, because we have instant feedback: we did something, and the collection volumn increases.\nHowever, apart from the plies of collection, actually we haven\u0026rsquo;t learned a thing.\nWhat to do instead We need to assimilate the information and increase our own knowledge, and one of the first steps is to take notes.\nWhen we need the information, instead of going through the reference again, we can refer to our notes.\nI rarely consult secondary sources again. If I have to do so, it means that I did not do the job right the first time. –MK, of “Taking Note Now” (This blog link is broken, but anyways, a good point)\nUse shorter research-process-assimilate cycle, for example:\nSet 1 hour limit to search for new materials. Process all the materials, make necessary notes. Review the cycle and make changes, such as increasing or reducing the research duration. In this way, the collected information is readily processed, and with each cycle, our knowledge base grows, making future research more efficient (I guess).\n","permalink":"qygong17.github.io/posts/notes-on-the-collectors-fallacy/","summary":"Notes on: The Collector’s Fallacy • Zettelkasten Method\nCollector\u0026rsquo;s Fallacy Hoarding information, such as making copies and bookmarking webpages, can be addictive, because we have instant feedback: we did something, and the collection volumn increases.\nHowever, apart from the plies of collection, actually we haven\u0026rsquo;t learned a thing.\nWhat to do instead We need to assimilate the information and increase our own knowledge, and one of the first steps is to take notes.","title":"Notes on The Collector’s Fallacy"},{"content":"My Online Storage Service (OSS) is about to expire, and I decide to use local images in the future, therefore, I wanted to download these images and convert the url links to local image links.\nThe Obsidian local images plus plugin does the job really well: Sergei-Korneev/obsidian-local-images-plus\nWith one command, hundreds of images were downloaded and the related links updated:\n","permalink":"qygong17.github.io/posts/obsidian-plugin-local-images-plus/","summary":"My Online Storage Service (OSS) is about to expire, and I decide to use local images in the future, therefore, I wanted to download these images and convert the url links to local image links.\nThe Obsidian local images plus plugin does the job really well: Sergei-Korneev/obsidian-local-images-plus\nWith one command, hundreds of images were downloaded and the related links updated:","title":"Obsidian Plugin-local images plus"},{"content":"Using Vivado 2018.3 .\nIntroduction In this post, the previous blinking LED project, Microblaze1 Hello World LED, is programmed into a flash.\nWhen the code size is small enough to fit in the BRAM, then, the flash configuration is easier and requires no bootloader or external RAM. We only need to include the application program (in this case, the blinking LED program) in the microblaze bitstream and store the bitstream in the flash.\n4-wire SPI configuration Associate the .elf file in the updated bitstream Generate mcs file Program SPI Flash Boot from SPI Flash Generate bitstream 4-wire SPI constraints Add to .xdc file (Of cources, the board and flash shoud support 4-wire SPI mode, and the correct voltage level should be used.):\n#############SPI Configurate Setting###################\r#4-wire SPI\rset_property CFGBVS VCCO [current_design]\rset_property CONFIG_VOLTAGE 3.3 [current_design]\rset_property BITSTREAM.CONFIG.SPI_BUSWIDTH 4 [current_design]\rset_property CONFIG_MODE SPIx4 [current_design]\rset_property BITSTREAM.CONFIG.CONFIGRATE 50 [current_design] Associate ELF Files In Synthesis/Implementation, select: Tools-Associate ELF Files. Select the correct elf file: (The build output of our application project (led.elf),not the default mb_bootloop_le.elf) Click OK, and re-run sythesis-implementation-generate bitstream. Generate mcs File Tools-Generate Memory Configuration Files.\nSelect the corrent memory part. On my board, MT25QL128, (alias N25Q128). Enter a file name, test_led.mcs Select SPIx4 Select Write checksum and Overwrite Program QSPI Flash From the left panel, open Hardware manager, then auto-connect to the board.\nAdd Configuration Memory Device Right click the device-Add Configuration Memory Device. Again, mt25ql128, (alias N25Q128) Right click the memory device-Program-select the generated test_led.mcs. After programming Flash, select the FPGA device, right click-Boot from Configuration Memory Device, the LED should start blinking (when using 4-wire SPI, it takes less than 1 second to load the bitstream).\nIf the bitstream does not load after power-up (but loads after pressing PROGRAM_B button ), remove the JTAG cable and try again:\nArtix-7 Power-Up configuration is not done (xilinx.com) 66954 - 2016.1 and newer Vivado Hardware Manager - Intermittent configuration failures can occur when the FPGA is power cycled and the programming cable is connected. (xilinx.com) Resource No Bootloader Version Flashing a MicroBlaze Program : 5 Steps - Instructables BIN and MCS Files Still a bit confused.\nWhat is the exact image of what needs to go on the FLASH memory. (bin, bit, mcs, \u0026hellip;. ?) (xilinx.com) MCS Vs BIN file (xilinx.com) jimbrady (Customer): The MCS file is a HEX file where two ASCII chars are used to represent each byte of data. And the binary file of course just contains just the raw byte stream, in sequence. So the MCS file seems less efficient, because it takes 2 bytes to represent 1 byte. But it has a couple of advantages (1) It has a checksum at the end of each line for integrity. (2) Each line includes the address where the line should be located in memory. So for example, if a MCS file contains a few segments located far apart in address space, it can be small while the equivalent binary file might be huge, because it would have a lot of 0x00 or 0xFFs to fill the space between segments.\nBootloader Version Adam Taylor’s MicroZed Chronicles, Part 221: How to boot a MicroBlaze soft processor from non-volatile memory (xilinx.com) ug940-vivado-tutorial-embedded-design.pdf • Viewer • AMD Adaptive Computing Documentation Portal (xilinx.com) ","permalink":"qygong17.github.io/posts/microblaze1.2-boot-from-qspi-flash-no-bootloader/","summary":"Flash Configuration for a MicroBlaze project running only in BRAM and without a bootloader.","title":"Microblaze1.2 Boot from QSPI Flash (No bootloader)"},{"content":"1 Introduction This post is a step-by-step guide implementing a blinking LED project with MicroBlaze:\nCreate a minimal MicroBlaze project Sample code for blinking LED (based on a Xilinx demo) Implementation on the demo board I am new to FPGA and MicroBlaze, and I learned these all from the tutorials I found. References are at the end.\nI used:\nDevice: xc7a35tfgg484-2, (an Artix-7 Mini board made by a Chinese company, Wildfire) Vivado 2018.3 2 In Vivado New RTL project and select the correct device.\n2.1 New Block Design IP integrator-Create Block Design. 2.2 Add MicroBlaze IP Run Block Automation:\nChoose New Clocking Wizard, because the board has a 50 MHz input clock, and the microblaze core seems to need a 100 MHz clock. Other setting default. After block automation, a few other IPs are added and connected: 2.3 Clocking wizard Input Clock-Source-single ended clock capable , also, correct frequency, 50 MHz. Output Clocks-Reset Type-select Active Low, to matching the schematics below (KEY1 is Low when the button is pushed): 2.4 Connection Automation Run Connection Automation: (I don\u0026rsquo;t know how this button can be accessed from the menu\u0026hellip;)\nInput ports for reset and clock are added automatically:\nThe generated port name was clk_100MHZ, I changed it to clk_50MHZ, to avoid confusion Two reset ports were generated, and I merged them into one. Regenerate Layout: useful button to organize the schematics.\n2.5 Add AXI_GPIO Add AXI_GPIO IP. I have 4 user LEDs on the board, so I selected GPIO Width=4, and All Outputs. Run Connection Automation again, GPIO IP is automaticly connected to the Microblaze system, meanwhile, an output port was added to the block dragram. 2.6 Validate Design Successful.\n2.7 Create wrapper (top level design) Automaticaly generate a top level design for the project. The final structure: top-mb1-all the IPs The generated wrapper:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 module mb1_wrapper (clk_50MHz, led_tri_o, reset_rtl_0); input clk_50MHz; output [3:0]led_tri_o; input reset_rtl_0; wire clk_50MHz; wire [3:0]led_tri_o; wire reset_rtl_0; mb1 mb1_i (.clk_50MHz(clk_50MHz), .led_tri_o(led_tri_o), .reset_rtl_0(reset_rtl_0)); endmodule 2.8 Define Contraints Run Synthesis From the top menus, layout-I/O planning Assign correct package pins and I/O standard for reset button, (read the schematics or documentations of your board) Save the constraint .xdc file. generated .xdc file :\nset_property PACKAGE_PIN W19 [get_ports clk_50MHz]\rset_property IOSTANDARD LVCMOS33 [get_ports clk_50MHz]\rset_property PACKAGE_PIN N20 [get_ports {led_tri_o[0]}]\rset_property PACKAGE_PIN M20 [get_ports {led_tri_o[1]}]\rset_property PACKAGE_PIN N22 [get_ports {led_tri_o[2]}]\rset_property PACKAGE_PIN M22 [get_ports {led_tri_o[3]}]\rset_property IOSTANDARD LVCMOS33 [get_ports {led_tri_o[3]}]\rset_property IOSTANDARD LVCMOS33 [get_ports {led_tri_o[2]}]\rset_property IOSTANDARD LVCMOS33 [get_ports {led_tri_o[1]}]\rset_property IOSTANDARD LVCMOS33 [get_ports {led_tri_o[0]}]\rset_property IOSTANDARD LVCMOS33 [get_ports reset_rtl_0]\rset_property PACKAGE_PIN R16 [get_ports reset_rtl_0] 2.9 Bitstream Generation All default settings:\nImplementation Generate bitstream 2.10 Export Hardware File-export-export Hardware with default settings.\n2.11 Open SDK File-Launch SDK\n3 In SDK 3.1 New Application Project In SDK, New-Application Project Finish, create an empty project 3.2 Add Sample Code Add main.c at src directory. main.c:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #include \u0026lt;stdio.h\u0026gt; #include \u0026#34;xil_printf.h\u0026#34; #include \u0026#34;xgpio.h\u0026#34; #include \u0026#34;xparameters.h\u0026#34; //for device id XGpio led_gpio; #define LED_DELAY 5000000 #define LED_CHANNEL 1 #define DIR_OUTPUT 0 int main() { volatile int counter; int status; // XPAR_GPIO_LED_DEVICE_ID: see xparameters.h // GPIO_LED is the name of the AXI_GPIO IP from Vivado status = XGpio_Initialize(\u0026amp;led_gpio, XPAR_GPIO_LED_DEVICE_ID); if(status != XST_SUCCESS) //if status!=0 { //comment out xil_printf, because the RAM was small, 8KB //xil_printf(\u0026#34;Gpio Initialization Failed\\r\\n\u0026#34;); return XST_FAILURE; //return 1 } XGpio_SetDataDirection(\u0026amp;led_gpio, LED_CHANNEL, DIR_OUTPUT); //all bits as output while(1) { // Set the GPIO bits to High XGpio_DiscreteWrite(\u0026amp;led_gpio, LED_CHANNEL, 0x0F); for(counter=0; counter\u0026lt;LED_DELAY;counter++); //delay // Set the GPIO bits to Low XGpio_DiscreteWrite(\u0026amp;led_gpio, LED_CHANNEL, 0x00); for(counter=0; counter\u0026lt;LED_DELAY;counter++); //delay } return XST_SUCCESS; } For initialization of GPIO, refer to xgpio_example.c: gpio: xgpio_example.c File Reference For device id, look for GPIO_LED (the name of AXI_GPIO ip from Vivado Block Design) in xparameters.h: 1 2 #define XPAR_GPIO_LED_DEVICE_ID 0 #define XPAR_GPIO_0_DEVICE_ID XPAR_GPIO_LED_DEVICE_ID 3.3 Debug 3.3.1 Run Configuration 3.3.2 Build Project Project-Build All\n3.3.3 Program FPGA Right click Project led-Run as-Launch on Hardware.\nAfter a few seconds, the LEDs should be blinking. Basically, the SDK is just like other IDEs for ARM or TI DSP, though I haven\u0026rsquo;t used these in a while, either.\n4 Links Maybe I should have used a newer Vivado version:\nStarting in the 2019.2 release, the Xilinx SDK development environment is unified into an all-in-one Vitis™ unified software platform.\nMost of the steps are from this video: Digilent Nexys: Microblaze and GPIO Design Implementation - YouTube Another toturial: MicroBlaze Quickstart Video volatile int: declaration - Why is volatile needed in C? - Stack Overflow volatile tells the compiler not to optimize anything that has to do with the volatile variable. MicroBlaze - section .text will not fit in region (xilinx.com) Step By Step Guide To Xilinx SDK Project Migration To Vitis gpio: xgpio_example.c File Reference search for xgpio_example.c inside the Vivado installation directory. ","permalink":"qygong17.github.io/posts/microblaze1-hello-world-led/","summary":"1 Introduction This post is a step-by-step guide implementing a blinking LED project with MicroBlaze:\nCreate a minimal MicroBlaze project Sample code for blinking LED (based on a Xilinx demo) Implementation on the demo board I am new to FPGA and MicroBlaze, and I learned these all from the tutorials I found. References are at the end.\nI used:\nDevice: xc7a35tfgg484-2, (an Artix-7 Mini board made by a Chinese company, Wildfire) Vivado 2018.","title":"Microblaze1 Hello World LED"},{"content":"Introduction Recently, I use Obsidian to write almost everything, including blog posts. I mainly use images and math in my posts. (I used to use PicGo to upload my images to a repo, now I started to store images locally.) So I wrote a simple Python script to modify my Obsidian markdown posts for publishing.\nThere are still many bugs (for example, when the wiki link is inside a code block), I guess, but it works for my recent posts. Input a file name Search for it in the blog folder, vault/Blogs Copy the mentioned image files to the image path, repo/static/images. Do something to the .md file: Convert wiki image links to markdown links ![](/images/fname) \\\\ -\u0026gt; \\\\\\ , or the (all the \\\\ will be changed, though, not just in math) Remove the comments at the beginning of my file %%some comments%% Write the new file to the post path, repo/content/posts Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 # -*- coding: utf-8 -*- import re import shutil import os import glob # Get the input file path fname = input(\u0026#39;Enter the file name (without .md):\u0026#39;) f_fullname = fname + \u0026#39;.md\u0026#39; src_file_path = \u0026#39;vault/Blogs/**/\u0026#39; + f_fullname file_list = glob.glob(src_file_path,recursive = True) blog_img_dir = \u0026#39;repo/static/images\u0026#39; blog_content_dir = \u0026#39;repo/content/posts\u0026#39; src_img_dir = \u0026#39;vault/images\u0026#39; # For simplicity, # the blog file name should be unique # or the script will exit if len(file_list)\u0026gt;1: print(\u0026#39;More than one file with the same name.\u0026#39;) input(\u0026#39;Press Enter to exit...\u0026#39;) os._exit(1) elif len(file_list) == 0: print(f\u0026#39;{f_fullname}: No file found.\u0026#39;) input(\u0026#39;Press Enter to exit...\u0026#39;) os._exit(1) # if file name is unique, continue: with open(file_list[0], \u0026#39;r\u0026#39;, encoding=\u0026#39;utf-8\u0026#39;) as f: # Read the entire contents of the file as a string text = f.read() f.close() # Find all wiki style attachment file names using re # such as `[[image.jpg]]` pattern = r\u0026#39;!\\[\\[(.*?)\\]\\]\u0026#39; file_names = re.findall(pattern, text) # Move each file to the target directory for file_name in file_names: src_path = src_img_dir + \u0026#39;/\u0026#39; + file_name img_dest_path = blog_img_dir + \u0026#39;/\u0026#39; + file_name # Use shutil.move() to copy the file shutil.copy(src_path, img_dest_path) print(f\u0026#39;Moved {file_name} to {img_dest_path}\u0026#39;) # Replace all occurrences of [[file name]] with [](file name) # Hogo display images in /static/images/: `![](/images/a.jpg)` new_text = re.sub(pattern, r\u0026#39;![](/images/\\1)\u0026#39;, text) # for multiline math, `\\\\` -\u0026gt; `\\\\\\` new_text = re.sub(r\u0026#39;\\\\\\\\\u0026#39;, r\u0026#39;\\\\\\\\\\\\\u0026#39;, new_text) # remove markdown comment `%% comment\\n comment2%%`. new_text = re.sub(r\u0026#39;%%(.|\\n)*?%%\u0026#39;, \u0026#39;\u0026#39;, new_text) blog_dest_path = blog_content_dir + \u0026#39;/\u0026#39; + f_fullname with open(blog_dest_path, \u0026#39;w\u0026#39;, encoding=\u0026#39;utf-8\u0026#39;) as f: # Write the modified string to a new file f.write(new_text) f.close() print(f\u0026#39;Write {blog_dest_path}\u0026#39;)\tinput(\u0026#39;Press Enter to exit...\u0026#39;) Some links How to use Glob() function to find files recursively in Python? - GeeksforGeeks\nHow can I write a regex which matches non greedy? - Stack Overflow\ndevidw/obsidian-to-hugo: Process Obsidian notes to publish them with Hugo\n","permalink":"qygong17.github.io/posts/python-script-for-publishing-blog-posts-from-obsidian/","summary":"A simple script","title":"Python script for publishing blog posts from Obsidian"},{"content":"Introduction Recently, I learned the basic control of the doubly-fed induction generator (DFIG) through a nice step-by-step tutorial on Youtube: DFIM Tutorial.\nNotes (in my other blog): Some Notes in Chinese Simulation models: DFIG_tutorial_Simulink Now, It\u0026rsquo;s time to turn to permanent magnet synchronous generator (PMSG). So, I started this one with a little background of DFIG.\nMy goals are:\nBasic operating principles of the PMSG Modelling in the abc frame and the synchronous frame How the model is utilized in a basic vector control scheme A set of simulation models in MATLAB/Simulink. It is almost my first time trying to create content in English (apart from a bunch of coursework I did years ago).\nI am also going to guess a lot, firstly trying to do things myself, then refer to textbooks or other sources. It may take longer, but I\u0026rsquo;m in no hurry and it just would be more fun. (Motors are fun, I guess. )\nMaybe this learning process would also be interesting for another post.\nLearning Resources A nice animation of PMSM from Youtube: Working of Synchronous Motor A series of tutorial on Youtube: Position Signal for PMSM and FOC Modeling Of course, typing PMSM or PMSG on Google or Youtube would give hours of other lectures as well. A lecture in Chinese: 第十七讲 永磁同步直驱风力发电系统结构及模型推导 ","permalink":"qygong17.github.io/posts/pmsg/pmsg0-background/","summary":"As I say background, it is actually a learning background of myself, not necessarily that of the PMSG.","title":"PMSG0 background and learning resources"},{"content":"A very brief introcuction For an ideal PMSG:\nThe magnets in the rotor generate a constant magnetic field, $\\psi_{m}$ (When the rotor is still). The three-phase AC current in the stator windings generates a rotating magnetic field (RMF), with speed of $60f$ RPM (revolutions per minute). $f$ is the frequency of the three-phase supply, and 60 is from seconds in a minute. (My rough explanation: the stator winding with 3-ph AC current is like a set of magnets revolving outside the rotor, the rotor magnets, therefore, would also revolve, with its north pole locked to the south poles of the equivalent stator magnets.) In steady state, the rotor is revolving at the synchronous speed, $\\frac{60f}{P}$ RPM, where $P$ is the number of pole pairs. About $P$ and synchrounous speed: How does the number of poles in an induction motor determine its speed and torque? - Electrical Engineering Stack Exchange\nDuring a half cycle of the supply current, the polarity of the magnetic field of the stator is reversed, so the rotor revolves from one pole to the other pole in the pair, therefore,\nmore pole pairs -\u0026gt; smaller angle for each pole pair -\u0026gt; less angle the rotor revolves in one cycle -\u0026gt; lower synchrounous speed (It is really brief because I didn\u0026rsquo;t know much about motors. )\nPMSG model in abc frame The dynamics of the PMSG is usually described by a set of equations: stator voltage, stator flux, Torque, and rotor speed. (Similar to those of the DFIG.)\nIdeal model, harmonics, saturation, losses, etc., are all ignored. Stator voltage The 3-ph voltage is supplied to the stator windings. Each winding could be regarded as a resistor and a coupled inductor. From Lenz\u0026rsquo;s Law and Kirchhoff\u0026rsquo;s voltage law, for each winding, $u_{x}=R_{s}i_{x}+ \\frac{d \\psi_{x}}{dt}$. Write out the equations in matrix form: $$\\left[\\begin{matrix} u_A \\\\ u_B \\\\ u_C \\end{matrix}\\right] = \\left[\\begin{matrix} R_s \u0026amp; 0 \u0026amp; 0 \\\\ 0 \u0026amp; R_s \u0026amp; 0 \\\\ 0 \u0026amp; 0 \u0026amp; R_s \\end{matrix}\\right] \\left[\\begin{matrix} i_A \\\\ i_B \\\\ i_C \\end{matrix}\\right] + \\frac{d}{dt}\\left[\\begin{matrix} \\psi_A \\\\ \\psi_B \\\\ \\psi_C \\end{matrix}\\right]$$\nStator flux The total flux of each stator winding comes from the winding itself, other windings, and the rotor.\n$$\\begin{align*} \\left[\\begin{matrix} \\psi_{A} \\\\ \\psi_{B} \\\\ \\psi_{C} \\\\ \\end{matrix}\\right] \u0026amp;= \\left[\\begin{matrix} \\psi_{AA}+\\psi_{AB}+\\psi_{AC}+\\psi_{Am} \\\\ \\psi_{BA}+\\psi_{BB}+\\psi_{BC}+\\psi_{Bm} \\\\ \\psi_{CA}+\\psi_{CB}+\\psi_{CC}+\\psi_{Cm} \\\\ \\end{matrix}\\right] \\\\ \u0026amp;=\\left[\\begin{matrix} L_{AA} \u0026amp; L_{AB} \u0026amp; L_{AC} \\\\ L_{BA} \u0026amp; L_{BB} \u0026amp; L_{BC} \\\\ L_{CA} \u0026amp; L_{CB} \u0026amp; L_{CC} \\end{matrix}\\right] \\left[\\begin{matrix} i_{A}\\\\ i_{B}\\\\ i_{C} \\end{matrix}\\right]+ \\left[\\begin{matrix} cos \\theta_{r} \\\\ cos \\left(\\theta_{r}+ \\frac{2}{3}\\pi\\right) \\\\ cos \\left(\\theta_{r}- \\frac{2}{3}\\pi\\right) \\end{matrix}\\right] \\psi_{m} \\end{align*}$$\nTorque Rotor speed $$ \\frac{J}{n_p}\\frac{d\\omega_r}{dt}=T_e-T_L $$ testing a new post.\nMost of the equations still came from textbooks, as I cannot invent them. But I\u0026rsquo;ll try to use my own words for the next posts.\nInductance - Wikipedia\n[[What is flux and what is an inductor]] [[What is mutual flux and mutual inductance]] These are some questions to revise in later posts. ","permalink":"qygong17.github.io/posts/pmsg/pmsg1-abc-model/","summary":"A very brief introcuction For an ideal PMSG:\nThe magnets in the rotor generate a constant magnetic field, $\\psi_{m}$ (When the rotor is still). The three-phase AC current in the stator windings generates a rotating magnetic field (RMF), with speed of $60f$ RPM (revolutions per minute). $f$ is the frequency of the three-phase supply, and 60 is from seconds in a minute. (My rough explanation: the stator winding with 3-ph AC current is like a set of magnets revolving outside the rotor, the rotor magnets, therefore, would also revolve, with its north pole locked to the south poles of the equivalent stator magnets.","title":"PMSG1 model in abc reference frame"},{"content":"背景 主要是记录一下使用双拼的体验和学习过程，以此为例，多体验一些有趣、可能会有帮助的东西。\n输入法：搜狗输入法+小鹤双拼的键位，因为感觉小鹤比较常用？另外，IOS里面也一样可以用小鹤。\n学习双拼的主要原因其实就是为了玩（目前看来用处的确不是特别大）：\n玩 学习一点新技能，毕竟以前只会全拼，试试有没有其他的方案（不敢学五笔。。） 一点点反应力锻炼 可能以后可以提升打字速度？——不过目前看效果不明显（毕竟全拼快的时候可以120wpm，现在双拼用了三周，大概在50-60wpm左右，只有一半，不过日常够用了） 心得体会 一部分情况下，和全拼没有区别，比如，打“比如”这类词——这也是双拼比较容易学的一个原因。 需要记忆的键位其实只有十几个，使用大约一两天以后，就基本不会忘了（虽然可能需要比较长的时间才能反应过来）。 有一些词，的确不如超级简拼方便，比如一些成语，用全拼的时候，打几个首字母就出来了。 尽量不要打开“双拼+全拼”功能，虽然可能在学习初期会比较方便，但可能会影响双拼的学习，毕竟打开这个功能以后，有些词的拼法就不太一样了。 按键次数明显变少了，毕竟，ang-H，uang-L等等，这些映射还是很方便的。少按好几个键。所以理论上我可以打得更快？ 在手机上用双拼感觉特别方便。手机的问题就是键盘太小，用双拼可以减少按错的次数。（而且用的是IOS自带的垃圾输入法，用双拼减少按键的同时，还能多给点信息，挺好的） 体验只用双拼三周以后，其实日常使用已经没有问题了，后面就看进一步熟悉以后，能不能继续提高了。总得来说还是一次比较有意思、也有用的尝试。 有人说学双拼会影响英文输入：我没体会到，毕竟是两个完全不同的输入系统，没有什么干涉。而且我也没忘记键盘每个键的位置，只是用双拼时，某些键有了一些特殊含义。 使用记录 2022.11.28 初次使用。直接上手觉得人都傻了。暂时先搜狗输入法，开着双拼+全拼用着。 2022.11.29 关闭了全拼：刚才拼“所”字，打不出来，差点以为记错了，结果发现是因为开了全拼，so也会出现“搜” 2022.12.1 基本上是每个词卡一下的状态。但是的确不用再看键位表了。 2022.12.2 大概每分钟40词 2022.12.7 还是和几天前差不多，基本上是每个词需要想一想才能打出来。有时候还是会错。 2022.12.10 一两个词，可以打得比较连贯。但是词一多，对于一个短句，还是需要想一想。 2022.12.11 偶尔错词，主要集中在C、D、V、U、I这些比较难记的键位上，但是还可接受。总得来说还是值得体验的，特别是在手机上，和单手打字的情况。 2022.12.18 三周以后，其实日常使用已经没有问题了 2023.5.15 看到之前的记录，发现已经持续用双拼大半年了。总得来说是值得学习一下的，这段时间没用过全拼。缺点可能就是，现在全拼不太熟练了吧。 ","permalink":"qygong17.github.io/posts/shuang-pin/","summary":"背景 主要是记录一下使用双拼的体验和学习过程，以此为例，多体验一些有趣、可能会有帮助的东西。\n输入法：搜狗输入法+小鹤双拼的键位，因为感觉小鹤比较常用？另外，IOS里面也一样可以用小鹤。\n学习双拼的主要原因其实就是为了玩（目前看来用处的确不是特别大）：\n玩 学习一点新技能，毕竟以前只会全拼，试试有没有其他的方案（不敢学五笔。。） 一点点反应力锻炼 可能以后可以提升打字速度？——不过目前看效果不明显（毕竟全拼快的时候可以120wpm，现在双拼用了三周，大概在50-60wpm左右，只有一半，不过日常够用了） 心得体会 一部分情况下，和全拼没有区别，比如，打“比如”这类词——这也是双拼比较容易学的一个原因。 需要记忆的键位其实只有十几个，使用大约一两天以后，就基本不会忘了（虽然可能需要比较长的时间才能反应过来）。 有一些词，的确不如超级简拼方便，比如一些成语，用全拼的时候，打几个首字母就出来了。 尽量不要打开“双拼+全拼”功能，虽然可能在学习初期会比较方便，但可能会影响双拼的学习，毕竟打开这个功能以后，有些词的拼法就不太一样了。 按键次数明显变少了，毕竟，ang-H，uang-L等等，这些映射还是很方便的。少按好几个键。所以理论上我可以打得更快？ 在手机上用双拼感觉特别方便。手机的问题就是键盘太小，用双拼可以减少按错的次数。（而且用的是IOS自带的垃圾输入法，用双拼减少按键的同时，还能多给点信息，挺好的） 体验只用双拼三周以后，其实日常使用已经没有问题了，后面就看进一步熟悉以后，能不能继续提高了。总得来说还是一次比较有意思、也有用的尝试。 有人说学双拼会影响英文输入：我没体会到，毕竟是两个完全不同的输入系统，没有什么干涉。而且我也没忘记键盘每个键的位置，只是用双拼时，某些键有了一些特殊含义。 使用记录 2022.11.28 初次使用。直接上手觉得人都傻了。暂时先搜狗输入法，开着双拼+全拼用着。 2022.11.29 关闭了全拼：刚才拼“所”字，打不出来，差点以为记错了，结果发现是因为开了全拼，so也会出现“搜” 2022.12.1 基本上是每个词卡一下的状态。但是的确不用再看键位表了。 2022.12.2 大概每分钟40词 2022.12.7 还是和几天前差不多，基本上是每个词需要想一想才能打出来。有时候还是会错。 2022.12.10 一两个词，可以打得比较连贯。但是词一多，对于一个短句，还是需要想一想。 2022.12.11 偶尔错词，主要集中在C、D、V、U、I这些比较难记的键位上，但是还可接受。总得来说还是值得体验的，特别是在手机上，和单手打字的情况。 2022.12.18 三周以后，其实日常使用已经没有问题了 2023.5.15 看到之前的记录，发现已经持续用双拼大半年了。总得来说是值得学习一下的，这段时间没用过全拼。缺点可能就是，现在全拼不太熟练了吧。 ","title":"双拼输入法体验记录"},{"content":"结论是，不一定需要，但是这些工具却很容易被当做是“刚需”。新的工具有自己的学习曲线，这些学习时间，不如用来做一些其他事情（使用顺手的工具即可）。\n原视频：Stop Procrastinating With Note-Taking Apps Like Obsidian, Roam, Logseq 是对所谓“第二大脑”的各种笔记软件和相对应的各种“高级拖延技术”的一些反思。 这是我基于问题-论据-结论，对视频内容的整理。并且，因为原视频是英文，在写作过程中，肯定有一些paraphrase。\n这里的“工作”，是广义的工作，可以是自己一直想做的事情，比如写一篇文章。 这里的“PKM”，是个人知识管理（personal knowledge management）。可以是一个系统，也可以具体到使用某个软件来做笔记。 部分不在视频里的内容，做了说明。 优化PKM是工作吗？ 大部分情况，不是。\nPKM没有输出，只是一个辅助系统 优化PKM和笔记软件，让我们看起来很厉害很聪明，是一种高级的拖延方法，让我们在没开始工作时就获得了一种“已完成”的感觉，类似： 一直在做学习前的各种准备工作 做很复杂（并且没必要）的计划， 看很多方法学相关的书。 一直和人讨论自己的想法，从来不开始做 博主自己的经历和感受 一开始觉得双链笔记看起来好高级，用了以后感觉自己都变聪明了 但是发现输出的东西、所做的工作、以及自己实际上其实并没有显得更聪明——这只是一种“变聪明的错觉” 看起来是在做准备工作，但是从结果来看，其实和看Netflix、打游戏没什么区别 好的PKM是开始工作的前提吗？ 大部分人会否认，但是潜意识里又掉进了这个“优化PKM”的陷阱。\n陷入添加、优化新功能，换新的工具的无底洞中 一直在换新工具，期待有一个革命性的工具来完全改变自己的工作 一直在优化自己的工具，看教程，学各种复杂操作（Obsidian的一大堆插件其实也挺像个陷阱） 以为做了这个优化、用了这个工具，我的效率就会突然提高两倍——实际上并不会 工作过程中，都会有不确定性、混乱、无奈，不可能先把做事情的系统调整到完美，再开始做事情。 collector\u0026rsquo;s fallacy: 收集的信息本身并没有用，而是要看我们基于这些信息，输出了什么。 没有一个完美的系统，对于现有的笔记软件，总有一个新软件比旧软件在某个方面好那么一点点。而追逐这么一点点效率（比如，在Obsidian里基于双链打开相关的笔记，和在一个文件夹里根据文件名搜一个word文档），不是在工作。 好的PKM系统可以提高效率，但是并不能代替努力工作。 怎样不落入这个陷阱？ 使用不完美的系统持续工作和输出——所有系统都不可能是完美的。\n意识到优化PKM不是工作： 如果潜意识认为PKM是在工作，你就可能会花大量的时间来优化这个系统。 博主自己也换了不少的笔记工具，觉得这些切换工具花费的时间应该被用来做实际的工作。 我感觉自己也花了太多时间在上面，（其实，很多Obsidian教程我都看不懂。。。） 用自己顺手的工具，高效地工作。（Good enough） 锻炼肌肉需要一定的锻炼和饮食，而不是一个最佳的锻炼计划。 作家的成果： 有优秀PKM系统的作家，可以高效写作； 持续写作的作家，可能效率不高，但也能出成果； 而一直在拖延、优化PKM、做笔记的作家，实际上什么都没做。 在看到新的工具和PKM系统时，问自己： 真的需要这些新的功能吗？ 真的有必要切换工具吗？ 我自己昨天的经历（这也不是视频里的）：拍了个视频，想要截取其中的部分画面，再转成gif，放到博文里去（FPGA: Verilog LED呼吸灯_Fantasy237的博客），但是以前没做过这种操作，刚准备搜个软件来学一下——想到，在播放视频时，用录屏软件截屏就好了，不需要什么新的软件。 想一想一些例子： 博主的一个朋友，用Evernote和Word，创业做得不错。 博主的另一个朋友，只用纸笔，也写出了优秀的作品。 以前都没有电脑，还是有人能做出影响世界的东西。 一些建议 用一个系统或一个笔记软件，坚持半年以上，最好是正在使用的——不需要更厉害的新工具。 相信自己的能力和思考，比依赖所谓“第二大脑”更重要。——不要害怕因为没做某个笔记，就错过了什么重要的东西。保持阅读和输出。 基于一些项目——比如要写的一篇博文——来做笔记。因为值得记录的东西是无穷无尽的，需要加以筛选。 优先完成工作和提升所需的能力，而不是一直去调整做笔记的方法或者PKM系统。 设置一些限制，比如，只在周日花2小时优化PKM系统，其他时间只基于现有的系统去完成工作。（比如我现在这样） 用Epictetus的一段话作为结束（这是我突然想起来的，不是视频里的）：\nDon’t pride yourself on any assets but your own. We could put up with a horse if it bragged of its beauty. But don’t you see that when you boast of having a beautiful horse, you are taking credit for the horse’s traits? - Epictetus (Ch. 6, Enchiridion)\n补充：Productivity Myths are Making You Miserable\n","permalink":"qygong17.github.io/posts/thoughts-on-second-brain/","summary":"结论是，不一定需要，但是这些工具却很容易被当做是“刚需”。新的工具有自己的学习曲线，这些学习时间，不如用来做一些其他事情（使用顺手的工具即可）。\n原视频：Stop Procrastinating With Note-Taking Apps Like Obsidian, Roam, Logseq 是对所谓“第二大脑”的各种笔记软件和相对应的各种“高级拖延技术”的一些反思。 这是我基于问题-论据-结论，对视频内容的整理。并且，因为原视频是英文，在写作过程中，肯定有一些paraphrase。\n这里的“工作”，是广义的工作，可以是自己一直想做的事情，比如写一篇文章。 这里的“PKM”，是个人知识管理（personal knowledge management）。可以是一个系统，也可以具体到使用某个软件来做笔记。 部分不在视频里的内容，做了说明。 优化PKM是工作吗？ 大部分情况，不是。\nPKM没有输出，只是一个辅助系统 优化PKM和笔记软件，让我们看起来很厉害很聪明，是一种高级的拖延方法，让我们在没开始工作时就获得了一种“已完成”的感觉，类似： 一直在做学习前的各种准备工作 做很复杂（并且没必要）的计划， 看很多方法学相关的书。 一直和人讨论自己的想法，从来不开始做 博主自己的经历和感受 一开始觉得双链笔记看起来好高级，用了以后感觉自己都变聪明了 但是发现输出的东西、所做的工作、以及自己实际上其实并没有显得更聪明——这只是一种“变聪明的错觉” 看起来是在做准备工作，但是从结果来看，其实和看Netflix、打游戏没什么区别 好的PKM是开始工作的前提吗？ 大部分人会否认，但是潜意识里又掉进了这个“优化PKM”的陷阱。\n陷入添加、优化新功能，换新的工具的无底洞中 一直在换新工具，期待有一个革命性的工具来完全改变自己的工作 一直在优化自己的工具，看教程，学各种复杂操作（Obsidian的一大堆插件其实也挺像个陷阱） 以为做了这个优化、用了这个工具，我的效率就会突然提高两倍——实际上并不会 工作过程中，都会有不确定性、混乱、无奈，不可能先把做事情的系统调整到完美，再开始做事情。 collector\u0026rsquo;s fallacy: 收集的信息本身并没有用，而是要看我们基于这些信息，输出了什么。 没有一个完美的系统，对于现有的笔记软件，总有一个新软件比旧软件在某个方面好那么一点点。而追逐这么一点点效率（比如，在Obsidian里基于双链打开相关的笔记，和在一个文件夹里根据文件名搜一个word文档），不是在工作。 好的PKM系统可以提高效率，但是并不能代替努力工作。 怎样不落入这个陷阱？ 使用不完美的系统持续工作和输出——所有系统都不可能是完美的。\n意识到优化PKM不是工作： 如果潜意识认为PKM是在工作，你就可能会花大量的时间来优化这个系统。 博主自己也换了不少的笔记工具，觉得这些切换工具花费的时间应该被用来做实际的工作。 我感觉自己也花了太多时间在上面，（其实，很多Obsidian教程我都看不懂。。。） 用自己顺手的工具，高效地工作。（Good enough） 锻炼肌肉需要一定的锻炼和饮食，而不是一个最佳的锻炼计划。 作家的成果： 有优秀PKM系统的作家，可以高效写作； 持续写作的作家，可能效率不高，但也能出成果； 而一直在拖延、优化PKM、做笔记的作家，实际上什么都没做。 在看到新的工具和PKM系统时，问自己： 真的需要这些新的功能吗？ 真的有必要切换工具吗？ 我自己昨天的经历（这也不是视频里的）：拍了个视频，想要截取其中的部分画面，再转成gif，放到博文里去（FPGA: Verilog LED呼吸灯_Fantasy237的博客），但是以前没做过这种操作，刚准备搜个软件来学一下——想到，在播放视频时，用录屏软件截屏就好了，不需要什么新的软件。 想一想一些例子： 博主的一个朋友，用Evernote和Word，创业做得不错。 博主的另一个朋友，只用纸笔，也写出了优秀的作品。 以前都没有电脑，还是有人能做出影响世界的东西。 一些建议 用一个系统或一个笔记软件，坚持半年以上，最好是正在使用的——不需要更厉害的新工具。 相信自己的能力和思考，比依赖所谓“第二大脑”更重要。——不要害怕因为没做某个笔记，就错过了什么重要的东西。保持阅读和输出。 基于一些项目——比如要写的一篇博文——来做笔记。因为值得记录的东西是无穷无尽的，需要加以筛选。 优先完成工作和提升所需的能力，而不是一直去调整做笔记的方法或者PKM系统。 设置一些限制，比如，只在周日花2小时优化PKM系统，其他时间只基于现有的系统去完成工作。（比如我现在这样） 用Epictetus的一段话作为结束（这是我突然想起来的，不是视频里的）：","title":"你真的需要“第二大脑”笔记系统吗？Obsidian/Notion/Roam/Logseq等等"},{"content":"Math Typeset math from: Writing math with Hugo | Misha Brukman\ntest inline: $\\psi_{rq} =L_ri_{rq}- \\frac{L_{M}^{2}}{L_{s}}i_{rq}$\ntest align: use 3 backslashes \\\\\\ instead of 2 \\\\, it works, but is odd\u0026hellip;\n$$ \\begin{aligned} u_{rd} \u0026amp;= R_ri_{rd}+ \\sigma L_{r}\\frac{d i_{rd}}{dt}-\\omega_{s1}\\sigma L_{r}i_{rq}+ \\left(\\frac{L_{M}}{L_{s}}\\frac{d}{dt}\\psi_{s}\\approx 0 \\right)\\\\\\ u_{rq} \u0026amp;= R_ri_{rq}+\\sigma L_{r}\\frac{d i_{rq}}{dt}+\\omega_{s1}\\sigma L_{r}i_{rd}+\\omega_{s1}\\frac{L_{M}}{L_{s}} \\psi_s \\end{aligned} $$\nFigure A figure from my oss, Markdown syntax ![](myoss.com/1.png) works: A local figure, ![](/images/test_image.png), while the actual image file is in \\static\\images: Use local image and tips: Rendering Images in Markdown Preview of Hugo Site | Mike F. Robbins (mikefrobbins.com)\nSwitched to PicGo with Github repo, also works:\nGithub Pages and deploy GitHub Pages\nHost on GitHub | Hugo (gohugo.io)\nCode blocks 1 2 3 4 5 6 module pwm_led ( input clk, input reset_n, output led ); Other settings demo: PaperMod (adityatelange.github.io)\nsource: adityatelange/hugo-PaperMod at exampleSite (github.com)\nTags https://discourse.gohugo.io/t/how-to-add-tag-and-category/3202\nyaml: tags: [\u0026quot;test Hugo and PaperMod\u0026quot;]\nconfig.yml:\ntaxonomies: category: categories tag: tags series: series toc Many thanks to: Hugo侧边目录 | 3rd\u0026rsquo;s Blog\nand\nHugo博客目录放在侧边 | PaperMod主题 | Sulv\u0026rsquo;s Blog (sulvblog.cn)\ntest bold, italics, inline code\nReference Started this blog from this tutorial (internal access): 使用ZJU Git快速搭建个人博客 - CC98论坛\n","permalink":"qygong17.github.io/posts/test-figure-and-math/","summary":"Math Typeset math from: Writing math with Hugo | Misha Brukman\ntest inline: $\\psi_{rq} =L_ri_{rq}- \\frac{L_{M}^{2}}{L_{s}}i_{rq}$\ntest align: use 3 backslashes \\\\\\ instead of 2 \\\\, it works, but is odd\u0026hellip;\n$$ \\begin{aligned} u_{rd} \u0026amp;= R_ri_{rd}+ \\sigma L_{r}\\frac{d i_{rd}}{dt}-\\omega_{s1}\\sigma L_{r}i_{rq}+ \\left(\\frac{L_{M}}{L_{s}}\\frac{d}{dt}\\psi_{s}\\approx 0 \\right)\\\\\\ u_{rq} \u0026amp;= R_ri_{rq}+\\sigma L_{r}\\frac{d i_{rq}}{dt}+\\omega_{s1}\\sigma L_{r}i_{rd}+\\omega_{s1}\\frac{L_{M}}{L_{s}} \\psi_s \\end{aligned} $$\nFigure A figure from my oss, Markdown syntax ![](myoss.com/1.png) works: A local figure, ![](/images/test_image.png), while the actual image file is in \\static\\images: Use local image and tips: Rendering Images in Markdown Preview of Hugo Site | Mike F.","title":"Test math, figure, tags, toc"},{"content":"搜索：Why blogging，总是能看到和business相关的内容，比如，写博客可以帮助提升网站的人气等等。像下面这个，十几条理由中，大部分都是和推广、商业相关： Why Blog? 14 Benefits of Blogging (in 2023) (wpbeginner.com)。\n但是这些和我想的有一定距离。\n关于我为什么写博客 主要还是保持每天写东西，虽然不是所有写的东西都会发布：\n首先是记录：有一个想法想要记录-\u0026gt;感觉可以拓展一下-\u0026gt;花点时间写出来发布。 然后写作也是一个整理思路的过程。比如之前学电机，看了一些书和教程，似乎懂了，开始写的时候，发现又只能查资料。“大致懂了”，和能清楚（至少自认为清楚）地描述出来，还是不同的。（费曼学习法：How to Learn Faster with the Feynman Technique (Example Included)） 我想练习英文写作，不仅仅是写技术相关的文章。 如果有人问起某个问题，然后我正好写过，我把对应的博文链接发给ta，很高兴又帮助了一个人。 最后，如果能帮助到另外的几个人，就更好了。 关于CSDN的博客 一年多以前在CSDN写了第一篇博客，记得是介绍一个元器件和仿真工具的使用。一年以后，逐渐发现，对于CSDN博客的形式不是太满意。这里面有自己的因素，也有这个站点的因素。比如：\n看每天新增了多少粉丝、收藏或访问 看大家都看了哪些热门的文章 各个角落里的广告，基本上不相关的“相关推荐” 写东西的时候总想着“这是不是一篇好的文章”——但对于“好”，其实是很难定义的，比如有价值、对别人有帮助、对自己有帮助、能吸引读者等。 CSDN还是一个技术领域的站点，有些奇奇怪怪的内容，不太想放在这里。 首页显示的一串数据，很容易让人感觉，这是一个博客“好不好”的评价标准。有时候我就经常盯着这几个数字看，这让我觉得不是一个好的状态，当然我也可以不盯着它们看，但是In my defense, they were staring at me。 In my defense, they were staring at me By the way, How I Met Your Mother is a good show.\n这些数字，和商业相关的东西，就会导致这样的文章和标题（当然我没看文章内容，也不是说这篇文章或者作者不“好”，只是说，不符合我对自己博客的一些想法）：如何写出一篇爆款文章？【CSDN攻略】创作技巧篇\n但是这些在CSDN或者大部分其他博客中，是不能修改的，所以就想着换个自建的博客。正好想起98里面有这个帖子，照着学了一下，看起来也还不错。\n而且，我不想每次发东西都有人审核（虽然从来没审核失败过）。所以我开了这个新的博客，里面只有内容和一些标签。没有访问次数，没有粉丝，甚至没有留言功能（当然主要还是因为我根本不懂怎么做网站）。\n以前我会在博客首页简介里写，“硬件工程师”，但是后来删掉了，因为我不想限制自己，当然不是说我不想做硬件工程师，只是，说不定，我也可以写一个读书笔记的博客，或者是介绍自己用过的一些小工具。后来我想，我可以主要是硬件工程师，然后同时又有很多不同的方面。\n当然，没有了这些数据，似乎就没有了成就感，但其实也无所谓。这篇文章是在看youtube时候想到的。以每年读书的数量去评价“好的读者”，和以阅读数、粉丝数来评价“好的博客”，似乎有类似之处。 Don\u0026rsquo;t Worry about Reading More Books. Focus on Reading Better. - YouTube\nAnd I\u0026rsquo;m posh enough to put \u0026ldquo;prose\u0026rdquo; or \u0026ldquo;essay\u0026rdquo; in my tags. I\u0026rsquo;m proud of myself.\n","permalink":"qygong17.github.io/posts/why-blogging/","summary":"搜索：Why blogging，总是能看到和business相关的内容，比如，写博客可以帮助提升网站的人气等等。像下面这个，十几条理由中，大部分都是和推广、商业相关： Why Blog? 14 Benefits of Blogging (in 2023) (wpbeginner.com)。\n但是这些和我想的有一定距离。\n关于我为什么写博客 主要还是保持每天写东西，虽然不是所有写的东西都会发布：\n首先是记录：有一个想法想要记录-\u0026gt;感觉可以拓展一下-\u0026gt;花点时间写出来发布。 然后写作也是一个整理思路的过程。比如之前学电机，看了一些书和教程，似乎懂了，开始写的时候，发现又只能查资料。“大致懂了”，和能清楚（至少自认为清楚）地描述出来，还是不同的。（费曼学习法：How to Learn Faster with the Feynman Technique (Example Included)） 我想练习英文写作，不仅仅是写技术相关的文章。 如果有人问起某个问题，然后我正好写过，我把对应的博文链接发给ta，很高兴又帮助了一个人。 最后，如果能帮助到另外的几个人，就更好了。 关于CSDN的博客 一年多以前在CSDN写了第一篇博客，记得是介绍一个元器件和仿真工具的使用。一年以后，逐渐发现，对于CSDN博客的形式不是太满意。这里面有自己的因素，也有这个站点的因素。比如：\n看每天新增了多少粉丝、收藏或访问 看大家都看了哪些热门的文章 各个角落里的广告，基本上不相关的“相关推荐” 写东西的时候总想着“这是不是一篇好的文章”——但对于“好”，其实是很难定义的，比如有价值、对别人有帮助、对自己有帮助、能吸引读者等。 CSDN还是一个技术领域的站点，有些奇奇怪怪的内容，不太想放在这里。 首页显示的一串数据，很容易让人感觉，这是一个博客“好不好”的评价标准。有时候我就经常盯着这几个数字看，这让我觉得不是一个好的状态，当然我也可以不盯着它们看，但是In my defense, they were staring at me。 In my defense, they were staring at me By the way, How I Met Your Mother is a good show.\n这些数字，和商业相关的东西，就会导致这样的文章和标题（当然我没看文章内容，也不是说这篇文章或者作者不“好”，只是说，不符合我对自己博客的一些想法）：如何写出一篇爆款文章？【CSDN攻略】创作技巧篇\n但是这些在CSDN或者大部分其他博客中，是不能修改的，所以就想着换个自建的博客。正好想起98里面有这个帖子，照着学了一下，看起来也还不错。\n而且，我不想每次发东西都有人审核（虽然从来没审核失败过）。所以我开了这个新的博客，里面只有内容和一些标签。没有访问次数，没有粉丝，甚至没有留言功能（当然主要还是因为我根本不懂怎么做网站）。\n以前我会在博客首页简介里写，“硬件工程师”，但是后来删掉了，因为我不想限制自己，当然不是说我不想做硬件工程师，只是，说不定，我也可以写一个读书笔记的博客，或者是介绍自己用过的一些小工具。后来我想，我可以主要是硬件工程师，然后同时又有很多不同的方面。\n当然，没有了这些数据，似乎就没有了成就感，但其实也无所谓。这篇文章是在看youtube时候想到的。以每年读书的数量去评价“好的读者”，和以阅读数、粉丝数来评价“好的博客”，似乎有类似之处。 Don\u0026rsquo;t Worry about Reading More Books.","title":"关于我为什么写博客"},{"content":"使用Zettelkasten方法做笔记 最近总看到Zettelkasten方法，看了一些视频和文章，主要看下怎么操作、从这个方法中可以学到什么。\n背景之类不再重复。主要记录操作方法等。\nZettelkasten方法 接收信息：书、文章、视频、播客等 记笔记 为哪些内容做笔记： 有些人说，大部分感兴趣的东西都可以记下来 自己的一些想法 笔记里有什么 记录：尽量做到只看自己的记录就能理解这个笔记的内容，而不需要再去看之前的原文 来源：记录这个笔记来自哪里，备用。 标志：便于引用（数字化的笔记中，这是挺容易的，比如使用文件名+日期） 和其他笔记的关系：见 处理笔记 处理笔记 整理： 之前记录的笔记中，有些是临时的一些想法，有些结构比较混乱， How To Take Smart Notes (3 methods no one\u0026rsquo;s talking about) 2023 Zettelkasten Obsidian Workflow ⚡️ Simple Set Up - YouTube 目标： 完整地解释一个最小的内容（atomic note） 用自己的话 建立新的笔记与现有笔记之间的关系——在我看来也是一个学习的过程，逐渐深入或者拓展。 另外一些操作：添加对应的标签等等。 写作 需要时刻记得，做笔记是为了什么，比如，变成自己的思考、转换成文章、视频、用于项目等 如果不输出，最后得到的也只是一堆双链笔记。 可以先列一个大纲-\u0026gt;把之前的相关的笔记填进去。然后再基于这个大纲，再完成最终的作品 但注意，这一步可能还是需要花很多的时间 Zettelkasten可以提升写作效率，但并不能代替最终的写作。 一些想法 坚持记录和写作，相信这个过程。Trust the Process 坚持用自己的话来描述——是在练习写作，同时也有助于加深理解。 Zettelkasten也可以用在工科的学术写作，比如这篇文章：Field Report #1: A PhD About Writing with His Zettelkasten • Zettelkasten Method。印象最深的是： 新的想法还是来自阅读和与人交流，而不是来自 Zettelkasten本身，但是Zettelkasten能帮助建立现有想法之间的联系。 一些想法和观点是通用的，不应被限制在某个项目中。——Luhmann’s Zettelkasten其实只有2个文件夹：文献、想法。 虽然基于 Zettelkasten笔记能快速建立一个大纲，最终的整理和写作还是困难的。 最后，不要花太多时间在工具或系统上：你真的需要“第二大脑”笔记系统吗？Obsidian/Notion/Roam/Logseq等等 另外一些资料 推荐这个视频，5分钟左右把关键信息描述清楚：Zettelkasten Note-Taking Method: Simply Explained - YouTube 另外，有这个网站：Getting Started • Zettelkasten Method 这是翻译（粗粗一看，可能是机翻）：Zettelkasten方法简介 - 知乎 (zhihu.com) A digital approach to Luhmann’s Zettelkasten (Slip Box) | Tevin Zhang ","permalink":"qygong17.github.io/posts/learn_zettelkasten_blog/","summary":"使用Zettelkasten方法做笔记 最近总看到Zettelkasten方法，看了一些视频和文章，主要看下怎么操作、从这个方法中可以学到什么。\n背景之类不再重复。主要记录操作方法等。\nZettelkasten方法 接收信息：书、文章、视频、播客等 记笔记 为哪些内容做笔记： 有些人说，大部分感兴趣的东西都可以记下来 自己的一些想法 笔记里有什么 记录：尽量做到只看自己的记录就能理解这个笔记的内容，而不需要再去看之前的原文 来源：记录这个笔记来自哪里，备用。 标志：便于引用（数字化的笔记中，这是挺容易的，比如使用文件名+日期） 和其他笔记的关系：见 处理笔记 处理笔记 整理： 之前记录的笔记中，有些是临时的一些想法，有些结构比较混乱， How To Take Smart Notes (3 methods no one\u0026rsquo;s talking about) 2023 Zettelkasten Obsidian Workflow ⚡️ Simple Set Up - YouTube 目标： 完整地解释一个最小的内容（atomic note） 用自己的话 建立新的笔记与现有笔记之间的关系——在我看来也是一个学习的过程，逐渐深入或者拓展。 另外一些操作：添加对应的标签等等。 写作 需要时刻记得，做笔记是为了什么，比如，变成自己的思考、转换成文章、视频、用于项目等 如果不输出，最后得到的也只是一堆双链笔记。 可以先列一个大纲-\u0026gt;把之前的相关的笔记填进去。然后再基于这个大纲，再完成最终的作品 但注意，这一步可能还是需要花很多的时间 Zettelkasten可以提升写作效率，但并不能代替最终的写作。 一些想法 坚持记录和写作，相信这个过程。Trust the Process 坚持用自己的话来描述——是在练习写作，同时也有助于加深理解。 Zettelkasten也可以用在工科的学术写作，比如这篇文章：Field Report #1: A PhD About Writing with His Zettelkasten • Zettelkasten Method。印象最深的是： 新的想法还是来自阅读和与人交流，而不是来自 Zettelkasten本身，但是Zettelkasten能帮助建立现有想法之间的联系。 一些想法和观点是通用的，不应被限制在某个项目中。——Luhmann’s Zettelkasten其实只有2个文件夹：文献、想法。 虽然基于 Zettelkasten笔记能快速建立一个大纲，最终的整理和写作还是困难的。 最后，不要花太多时间在工具或系统上：你真的需要“第二大脑”笔记系统吗？Obsidian/Notion/Roam/Logseq等等 另外一些资料 推荐这个视频，5分钟左右把关键信息描述清楚：Zettelkasten Note-Taking Method: Simply Explained - YouTube 另外，有这个网站：Getting Started • Zettelkasten Method 这是翻译（粗粗一看，可能是机翻）：Zettelkasten方法简介 - 知乎 (zhihu.","title":"使用Zettelkasten方法做笔记"},{"content":"简介 每天日记里写同样的东西，感觉有点无聊，想问自己一些问题，每天不同。\n查到有插件random structural diary，我想要的功能就是这样，但是没懂这个插件怎么放进template。\n想要的功能很简单，所以自己写一个：新建一个日记时，从一个自己设定的问题列表中选择一个，打印在日记中。\n写一个简单的脚本 randomDailyQuestion.js:\n1 2 3 4 5 6 7 8 9 10 11 12 function randomDailyQuestion() { let myQuestionArray = []; myQuestionArray.push(\u0026#34;Question apple\u0026#34;); myQuestionArray.push(\u0026#34;Question banana\u0026#34;); myQuestionArray.push(\u0026#34;Question orange\u0026#34;); let randomIndex = Math.floor(Math.random() * myQuestionArray.length); let randomQuestion = myQuestionArray[randomIndex]; return randomQuestion; } module.exports = randomDailyQuestion （语法全问GPT，比自己搜快多了） Templater设置 设置存放程序的目录：\n加入template 在对应的template代码中加入刚才的脚本，比如这里是在日期下面加了这个问题：\n# \u0026lt;% tp.date.now(\u0026#34;dddd MMMM Do YYYY\u0026#34;) %\u0026gt;\r\u0026lt;% tp.user.randomDailyQuestion(tp) %\u0026gt; 最终结果 上面两行显示为： 每次会打印其中一个问题。\n警告 注意，个人知识管理（personal knowledge management, PKM）并不等于实际的工作（除非你是这方面的博主）。不要花大量时间在这些花里胡哨的东西上面。去干活！！！\nStop Procrastinating With Note-Taking Apps Like Obsidian, Roam, Logseq\n参考资料 关于在Templater使用JS，这个资料很详细，Templater插件首页推荐的： how-to-use-templater-js-scripts - shabeblog (shbgm.ca)\n一些可以问自己的问题： 88 Daily Journal Prompts \u0026amp; Questions - Parade: Entertainment, Recipes, Health, Life, Holidays\n","permalink":"qygong17.github.io/posts/random-questions-for-my-daily-notes/","summary":"简介 每天日记里写同样的东西，感觉有点无聊，想问自己一些问题，每天不同。\n查到有插件random structural diary，我想要的功能就是这样，但是没懂这个插件怎么放进template。\n想要的功能很简单，所以自己写一个：新建一个日记时，从一个自己设定的问题列表中选择一个，打印在日记中。\n写一个简单的脚本 randomDailyQuestion.js:\n1 2 3 4 5 6 7 8 9 10 11 12 function randomDailyQuestion() { let myQuestionArray = []; myQuestionArray.push(\u0026#34;Question apple\u0026#34;); myQuestionArray.push(\u0026#34;Question banana\u0026#34;); myQuestionArray.push(\u0026#34;Question orange\u0026#34;); let randomIndex = Math.floor(Math.random() * myQuestionArray.length); let randomQuestion = myQuestionArray[randomIndex]; return randomQuestion; } module.exports = randomDailyQuestion （语法全问GPT，比自己搜快多了） Templater设置 设置存放程序的目录：\n加入template 在对应的template代码中加入刚才的脚本，比如这里是在日期下面加了这个问题：\n# \u0026lt;% tp.date.now(\u0026#34;dddd MMMM Do YYYY\u0026#34;) %\u0026gt;\r\u0026lt;% tp.user.randomDailyQuestion(tp) %\u0026gt; 最终结果 上面两行显示为： 每次会打印其中一个问题。\n警告 注意，个人知识管理（personal knowledge management, PKM）并不等于实际的工作（除非你是这方面的博主）。不要花大量时间在这些花里胡哨的东西上面。去干活！！！","title":"Obsidian templater日记模板添加一个随机问题和Templater Javascript"},{"content":"FPGA Verilog简单的LED呼吸灯，作为新板子的亮灯程序。\n这个LED在输出高电平时点亮。 主要的想法：\nCMP_MAX限制最大占空比，因为发现在占空比较大时，改变占空比时，亮度变化不大，效果不明显。 PWM_CNT_MAX设置PWM频率 DUTY_CNT_MAX设置占空比变化的频率 CMP_STEP设置每次占空比变化的步长，通过改变CMP_STEP来改变呼吸灯的频率 flag_duty_increase指示占空比变化的方向 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 module pwm_led ( input clk, input reset_n, output led ); parameter PWM_CNT_MAX = 32\u0026#39;d50_000; //PWM frequency 50M/5e4=1kHz parameter CMP_MAX = 32\u0026#39;d25_000; //max duty ratio CMP_MAX/PWM_CNT_MAX=0.5 parameter DUTY_CNT_MAX = 32\u0026#39;d500_000; //duty step change frequency 50M/DUTY_CNT_MAX=100Hz, every 0.01s parameter CMP_STEP = 32\u0026#39;d500; //duty step length //estimated cycle: //=(DUTY_CNT_MAX/50M)*(CMP_MAX/DUTY_STEP)*2 //=0.01s*50*2=1s reg [31:0] pwm_cnt; reg [31:0] duty_cnt; reg [31:0] cmp; reg flag_duty_increase; always @(posedge clk) begin if(!reset_n) pwm_cnt \u0026lt;= 0; else if(pwm_cnt \u0026gt;= PWM_CNT_MAX-1) pwm_cnt \u0026lt;= 32\u0026#39;d0; else pwm_cnt \u0026lt;= pwm_cnt + 1; end always @(posedge clk) begin if(!reset_n) duty_cnt \u0026lt;= 0; else if(duty_cnt \u0026gt;= DUTY_CNT_MAX-1) duty_cnt \u0026lt;= 32\u0026#39;d0; else duty_cnt \u0026lt;= duty_cnt + 1; end always @(posedge clk) begin if(!reset_n) begin flag_duty_increase \u0026lt;= 0; cmp \u0026lt;= 0; end else if(duty_cnt == DUTY_CNT_MAX-1) if(flag_duty_increase) //increase cmp if(cmp \u0026gt;= CMP_MAX) flag_duty_increase \u0026lt;= 0; else cmp \u0026lt;= cmp + CMP_STEP; else //flag_duty_increase == 0, decrease cmp if(cmp \u0026lt; CMP_STEP) flag_duty_increase \u0026lt;= 1; else cmp \u0026lt;= cmp - CMP_STEP; end assign led = (cmp \u0026gt; pwm_cnt); //duty ratio = cmp/PWM_CNT_MAX endmodule 效果 仿真不做了（亮灯程序，能用就行），上板实测效果：\n","permalink":"qygong17.github.io/posts/pwm-dimming-led/","summary":"FPGA Verilog简单的LED呼吸灯，作为新板子的亮灯程序。\n这个LED在输出高电平时点亮。 主要的想法：\nCMP_MAX限制最大占空比，因为发现在占空比较大时，改变占空比时，亮度变化不大，效果不明显。 PWM_CNT_MAX设置PWM频率 DUTY_CNT_MAX设置占空比变化的频率 CMP_STEP设置每次占空比变化的步长，通过改变CMP_STEP来改变呼吸灯的频率 flag_duty_increase指示占空比变化的方向 代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 module pwm_led ( input clk, input reset_n, output led ); parameter PWM_CNT_MAX = 32\u0026#39;d50_000; //PWM frequency 50M/5e4=1kHz parameter CMP_MAX = 32\u0026#39;d25_000; //max duty ratio CMP_MAX/PWM_CNT_MAX=0.","title":"FPGA LED呼吸灯"},{"content":"Since I don\u0026rsquo;t know the first thing about web design, all of the modifications are from Google or other bloggers. The source will be included. Thanks in advance.\n2023-05-15 Organizing content I planned a few blog posts for the basic modelling and control of PMSG. I wanted to put all the relevant posts into a folder, such as content/post/PMSG.\nDocumentation: Content Organization | Hugo (gohugo.io) Demo: hugo-PaperMod/content/posts/papermod Source of the demo: PaperMod (adityatelange.github.io) Summary: create content/post/PMSG/_index.md. (It has to be _index.md) And _index.md will not be listed in posts.\n2023-05-18 Code display on mobile devices [BUG] On iOS mobile phone, the code block font size is not the same · Issue #828 · adityatelange/hugo-PaperMod (github.com) assets/css/extended/custom.css\n1 2 3 4 5 6 7 /* Fixes iOS font sizing anomaly */ code { text-size-adjust: 100%; -ms-text-size-adjust: 100%; -moz-text-size-adjust: 100%; -webkit-text-size-adjust: 100%; } 2023-05-19 Text color I wanted more contrast between different texts, mainly, inline code, code, and urls like: test url. Added repo/assets/css/extended/text-color.css:\n1 2 3 4 5 6 7 .post-content code { color: rgb(245, 8, 8); } /* for inline code `code`*/ .post-content a{ color: blue; } /* for urls [name](url)*/ /* see PaperMod/assets/css/common/post-single.css*/ Learned from this discussion: In-line code highlight - support - HUGO (gohugo.io) ","permalink":"qygong17.github.io/posts/a-record-of-what-i-did-to-my-blog/","summary":"Since I don\u0026rsquo;t know the first thing about web design, all of the modifications are from Google or other bloggers. The source will be included. Thanks in advance.\n2023-05-15 Organizing content I planned a few blog posts for the basic modelling and control of PMSG. I wanted to put all the relevant posts into a folder, such as content/post/PMSG.\nDocumentation: Content Organization | Hugo (gohugo.io) Demo: hugo-PaperMod/content/posts/papermod Source of the demo: PaperMod (adityatelange.","title":"A record of what I did to my blog"},{"content":"I would like to talk about random things, simulations, circuits, power electronics, tools, (books?), (philosophy?), etc.\nAlthough none of them are here yet.\nSometimes I write in English, just as a practice.\n","permalink":"qygong17.github.io/about/","summary":"About","title":"About"}]